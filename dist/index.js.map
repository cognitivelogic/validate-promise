{"version":3,"file":"index.js","sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap d8a0f385f40b46cd7dc8","webpack:///src/index.js","webpack:///src/rules/after.js","webpack:///src/rules/before.js","webpack:///src/rules/blacklist.js","webpack:///src/rules/equals.js","webpack:///src/rules/float.js","webpack:///src/rules/greaterthan.js","webpack:///src/rules/int.js","webpack:///src/rules/lessthan.js","webpack:///src/rules/required.js","webpack:///src/rules/whitelist.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"validate-promise\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"validate-promise\"] = factory();\n\telse\n\t\troot[\"validate-promise\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d8a0f385f40b46cd7dc8","// @flow\n\nimport after from './rules/after';\nimport before from './rules/before';\nimport blacklist from './rules/blacklist';\nimport equals from './rules/equals';\nimport float from './rules/float';\nimport greaterthan from './rules/greaterthan';\nimport int from './rules/int';\nimport lessthan from './rules/lessthan';\nimport required from './rules/required';\nimport whitelist from './rules/whitelist';\nimport type {ValidationPromise,\n  Validation, ValidationResponse} from './flow-declarations';\n\n/**\n * Iterates over an array of promises, unline Promise.all it will not\n * stop when one promise is rejected. Instead all promises are run and an\n * array of objects describing the promise resolution is returned\n */\nconst hashSettled = (promises: Object): Promise<Object[]> => {\n    let keys: string[] = Object.keys(promises);\n    return Promise.all(keys.map((k: string) => Promise.resolve(promises[k])\n    .then((value: string): ValidationResponse => {\n      let r: ValidationResponse = {\n        state: 'fulfilled',\n        key: k,\n        value\n      };\n      return r;\n    }, (reason: string): ValidationResponse => {\n      let r: ValidationResponse = {\n        state: 'rejected',\n        key: k,\n        reason\n      };\n      return r;\n    })));\n  },\n\n  /**\n   * Validate data againsts fields\n   * @param {Array} contract Validation rules\n   * @param {Object} data Form data\n   * @return {Object|Boolean} true if passed, error object if failed,\n   * array error messages keyed on field.name\n   */\n  validate = (contract: Array<Validation>, data: Object): boolean | Object => {\n    let promises: Object = {};\n    contract.forEach((validation: Validation, cx: number) => {\n      let name = validation.key,\n        value = data[name];\n      validation.promises.forEach((p: ValidationPromise, i: number) => {\n        let key = name + '.' + cx + '.' + i,\n          thisArg = p.arg === undefined ? null : p.arg;\n\n        promises[key] = p.rule(value, data, validation.msg, thisArg);\n      });\n    });\n\n    return new Promise((resolve: Function, reject: Function) => {\n      hashSettled(promises)\n        .then((res: Array<Object>) => {\n          let errors = res.filter((r: ValidationResponse): boolean => r.state === 'rejected'),\n            ret = {};\n          errors.forEach((err: ValidationResponse) => {\n            let k: string = err.key.split('.').shift();\n            if (!ret[k]) {\n              ret[k] = [];\n            }\n            if (ret[k].indexOf(err.reason) === -1) {\n              ret[k].push(err.reason);\n            }\n          });\n\n          if (errors.length === 0) {\n            resolve(true);\n          }\n          reject(ret);\n        });\n    });\n  };\n\nexport default validate;\n\nexport {\n  after,\n  before,\n  blacklist,\n  equals,\n  float,\n  greaterthan,\n  int,\n  lessthan,\n  required,\n  whitelist\n};\n\n\n\n// WEBPACK FOOTER //\n// src/index.js","// @flow\n\ntype ArgFunc = (value: string, row: Object) => string;\n/**\n * Check if a value is after a given date\n * @param {String} value To validate\n * @param {Object} row Form data\n * @param {Function} msg Error message function\n * @param {*} arg Validation arguement\n * @return {Promise} .\n */\nexport default (value: string, row: Object, msg: Function, arg: string|ArgFunc) : Promise<?string> => {\n  let test: number = Date.parse(value);\n  if (typeof arg === 'function') {\n    arg = arg(value, row);\n  }\n  let compare: number = Date.parse(arg);\n\n  if (test > compare) {\n    return Promise.resolve();\n  }\n  return Promise.reject(msg(value, row, arg));\n};\n\n\n\n// WEBPACK FOOTER //\n// src/rules/after.js","// @flow\n\ntype ArgFunc = (value: string, row: Object) => string;\n\n/**\n * Check if a value is before a given date\n * @param {String} value To validate\n * @param {Object} row Form data\n * @param {Function} msg Error message function\n * @param {*} arg Validation arguement\n * @return {Promise} .\n */\nexport default (value: string, row: Object, msg: Function, arg: string|Function) : Promise<?string> => {\n  let test: number = Date.parse(value);\n  if (typeof arg === 'function') {\n    arg = arg(value, row);\n  }\n  let compare: number = Date.parse(arg);\n\n  if (test < compare) {\n    return Promise.resolve();\n  }\n  return Promise.reject(msg(value, row, arg));\n};\n\n\n\n// WEBPACK FOOTER //\n// src/rules/before.js","// @flow\n\ntype ArgFunc = (value: string, row: Object) => string[];\n\n/**\n * Check if a value is in a blacklist\n * @param {String} value To validate\n * @param {Object} row Form data\n * @param {Function} msg Error message function\n * @param {array} arg Validation arguement\n * @return {Promise} .\n */\nexport default (value: string, row: Object, msg: Function, arg: string[]|ArgFunc) : Promise<?string> => {\n  if (typeof arg === 'function') {\n    arg = arg(value, row);\n  }\n  if (arg.indexOf(value) === -1) {\n    return Promise.resolve();\n  }\n  return Promise.reject(msg(value, row, arg));\n};\n\n\n\n// WEBPACK FOOTER //\n// src/rules/blacklist.js","// @flow\n\ntype ArgFunc = (value: string, row: Object) => any;\n\n/**\n * Check if a value can be coerced to an integer\n * @param {String} value To validate\n * @param {Object} row Form data\n * @param {Function} msg Error message function\n * @param {*} arg Validation arguement\n * @return {Promise} .\n */\nexport default (value: string, row: Object, msg: Function, arg: any|ArgFunc) : Promise<?string> => {\n  if (typeof arg === 'function') {\n    arg = arg(value, row);\n  }\n\n  if (value == arg) {\n    return Promise.resolve();\n  }\n  return Promise.reject(msg(value, row, arg));\n};\n\n\n\n// WEBPACK FOOTER //\n// src/rules/equals.js","// @flow\n\ntype FloatBoundsType = {\n  min?: number,\n  max?: number\n};\n\ntype FloatBoundFuncType = (value: string, row: Object) => FloatBoundsType;\n\n/**\n * Check if a value can be coerced to an integer\n * @param {String} value To validate\n * @param {Object} row Form data\n * @param {Function} msg Error message function\n * @param {*} arg Validation arguement\n * @return {Promise} .\n */\nexport default (value: string, row: Object,\n  msg: Function,\n  arg: FloatBoundsType | FloatBoundFuncType): Promise<?string> => {\n  if (typeof arg === 'function') {\n    arg = arg(value, row);\n  }\n\n  const float = /^(?:[-+]?(?:[0-9]+))?(?:\\.[0-9]*)?(?:[eE][\\+\\-]?(?:[0-9]+))?$/;\n\n  if (arg !== null) {\n    if ((arg.min !== undefined &&\n      parseInt(value, 10) < parseInt(arg.min, 10))) {\n      return Promise.reject(msg(value, row, arg));\n    }\n\n    if ((arg.max && parseInt(value, 10) > parseInt(arg.max, 10))) {\n      return Promise.reject(msg(value, row, arg));\n    }\n  }\n\n  if (float.test(value)) {\n    return Promise.resolve();\n  }\n  return Promise.reject(msg(value, row, arg));\n};\n\n\n\n// WEBPACK FOOTER //\n// src/rules/float.js","// @flow\n\ntype ArgFunc = (value: string, row: Object) => number;\ntype CompareSet = {\n  value: string;\n  compare: string\n};\n\n/**\n * Check if a value is greater than foo\n * @param {String} value To validate\n * @param {Object} row Form data\n * @param {Function} msg Error message function\n * @param {*} arg Validation arguement\n * @return {Promise} .\n */\nexport default (value: string, row: Object, msg: Function, arg: number|ArgFunc|CompareSet) : Promise<?string> => {\n  let compare = arg;\n  if (typeof arg === 'function') {\n    compare = arg(value, row);\n  }\n  if (typeof compare === 'object') {\n    value = compare.value;\n    compare = compare.compare;\n  }\n  if (parseInt(value, 10) > parseInt(compare, 10)) {\n    return Promise.resolve();\n  }\n\n  return Promise.reject(msg(value, row, arg));\n};\n\n\n\n// WEBPACK FOOTER //\n// src/rules/greaterthan.js","// @flow\n\ntype IntBoundsType = {\n  min?: number,\n  max?: number\n};\n\ntype IntBoundFuncType = (value: string, row: Object) => IntBoundsType;\n\n/**\n * Check if a value can be coerced to an integer\n * @param {String} value To validate\n * @param {Object} row Form data\n * @param {Function} msg Error message function\n * @param {*} arg Validation arguement\n * @return {Promise} .\n */\nexport default (value: string, row: Object,\n  msg: Function, arg: IntBoundsType | IntBoundFuncType): Promise<?string> => {\n  if (typeof arg === 'function') {\n    arg = arg(value, row);\n  }\n\n  const int = /^(?:[-+]?(?:0|[1-9][0-9]*))$/;\n\n  if (arg !== null) {\n    if ((arg.min !== undefined &&\n      parseInt(value, 10) < parseInt(arg.min, 10))) {\n      return Promise.reject(msg(value, row, arg));\n    }\n\n    if ((arg.max && parseInt(value, 10) > parseInt(arg.max, 10))) {\n      return Promise.reject(msg(value, row, arg));\n    }\n  }\n\n  if (int.test(value)) {\n    return Promise.resolve();\n  }\n  return Promise.reject(msg(value, row, arg));\n};\n\n\n\n// WEBPACK FOOTER //\n// src/rules/int.js","// @flow\n\ntype ArgFunc = (value: string, row: Object) => number;\ntype CompareSet = {\n  value: string;\n  compare: string\n};\n\n/**\n * Check if a value is less than foo\n * @param {String} value To validate\n * @param {Object} row Form data\n * @param {Function} msg Error message function\n * @param {*} arg Validation arguement\n * @return {Promise} .\n */\nexport default (value: string, row: Object, msg: Function, arg: number|ArgFunc|CompareSet) : Promise<?string> => {\n  let compare = arg;\n  if (typeof arg === 'function') {\n    compare = arg(value, row);\n  }\n  if (typeof compare === 'object') {\n    value = compare.value;\n    compare = compare.compare;\n  }\n\n  if (parseInt(value, 10) < parseInt(compare, 10)) {\n    return Promise.resolve();\n  }\n\n  return Promise.reject(msg(value, row, arg));\n};\n\n\n\n// WEBPACK FOOTER //\n// src/rules/lessthan.js","// @flow\n\n/**\n * Check if a value is greater than foo\n * @param {String} value To validate\n * @param {Object} row Form data\n * @param {Function} msg Error message function\n * @param {*} args Field arguements\n * @return {Promise} .\n */\nexport default (value: string, row: Object, msg: Function) : Promise<?string> => {\n  return new Promise((resolve, reject) => {\n    if (value !== '' && value !== undefined) {\n      return resolve();\n    }\n    return reject(msg(value, row));\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// src/rules/required.js","// @flow\n\ntype ArgFunc = (value: string, row: Object) => string[];\n\n/**\n * Check if a value is in a whitelist\n * @param {String} value To validate\n * @param {Object} row Form data\n * @param {Function} msg Error message function\n * @param {array} arg Validation arguement\n * @return {Promise} .\n */\nexport default (value: string, row: Object, msg: Function, arg: string[]|ArgFunc) : Promise<?string> => {\n  if (typeof arg === 'function') {\n    arg = arg(value, row);\n  }\n  if (arg.indexOf(value) !== -1) {\n    return Promise.resolve();\n  }\n  return Promise.reject(msg(value, row, arg));\n};\n\n\n\n// WEBPACK FOOTER //\n// src/rules/whitelist.js"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACpCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AAGA;;;;;AAKA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAfA;AAgBA;AACA;AACA;AAAA;;;;;;;AAOA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3FA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjBA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClBA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACfA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACXA;;;;;;;;AAQA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AChCA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpBA;;;;;;;;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC/BA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5BA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACZA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;","sourceRoot":""}